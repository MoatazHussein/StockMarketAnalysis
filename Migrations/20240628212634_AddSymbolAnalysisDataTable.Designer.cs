// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockMarket.Data;

#nullable disable

namespace StockMarket.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240628212634_AddSymbolAnalysisDataTable")]
    partial class AddSymbolAnalysisDataTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockMarket.Models.FavouriteSymbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("SymbolID")
                        .HasColumnType("int");

                    b.Property<string>("SymbolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FavoriteSymbols");
                });

            modelBuilder.Entity("StockMarket.Models.SymbolAnalysisData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Adx")
                        .HasColumnType("float");

                    b.Property<int?>("Buy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Neutral")
                        .HasColumnType("int");

                    b.Property<int?>("Sell")
                        .HasColumnType("int");

                    b.Property<string>("Signal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Trending")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SymbolAnalysisData");
                });

            modelBuilder.Entity("StockMarket.Models.SymbolDataSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AvgVolume")
                        .HasColumnType("float");

                    b.Property<double?>("Change")
                        .HasColumnType("float");

                    b.Property<double?>("ChangesPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("DayHigh")
                        .HasColumnType("float");

                    b.Property<double?>("DayLow")
                        .HasColumnType("float");

                    b.Property<string>("EarningsAnnouncement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Eps")
                        .HasColumnType("float");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MarketCap")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Open")
                        .HasColumnType("float");

                    b.Property<double?>("Pe")
                        .HasColumnType("float");

                    b.Property<double?>("PreviousClose")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("PriceAvg200")
                        .HasColumnType("float");

                    b.Property<double?>("PriceAvg50")
                        .HasColumnType("float");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SharesOutstanding")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Timestamp")
                        .HasColumnType("float");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("YearHigh")
                        .HasColumnType("float");

                    b.Property<double?>("YearLow")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SymbolDataSections");
                });

            modelBuilder.Entity("StockMarket.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
